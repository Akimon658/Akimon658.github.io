[{"content":"How do you usually do when you need to authorize using the browser in WSL? Copy the token? Or use WSLg? These ways are not wrong, but it will be better to use the host\u0026rsquo;s browser.\nHere is how to set it:\nsudo update-alternatives --install /usr/bin/x-www-browser x-www-browser path/to/browser priority Example:\nsudo update-alternatives --install /usr/bin/x-www-browser x-www-browser /mnt/c/Program\\ Files/Google/Chrome/Application/chrome.exe 1 Thatâ€™s all if you don\u0026rsquo;t have any browser in WSL. Even if you have installed one, I don\u0026rsquo;t think you have to think seriously about priority because you can configure default by the following command.\nsudo update-alternatives --config x-www-browser Now, you can use the browser of Windows as WSL\u0026rsquo;s default.\n","date":"2021-12-31","permalink":"https://akimon658.github.io/en/p/2021/wsl-default-browser/","tags":null,"title":"How to use the browser in Windows as WSL's default"},{"content":"When you use Gitpod  , you can use gitpod/workspace-full  . It is enough for development most case. However, I\u0026rsquo;d like to use a morphological analysis engine called MeCab  with Golang, so I tried to use an image I\u0026rsquo;ve created in advance  . However, I got stuck on permission, so I\u0026rsquo;m writing this article.\nAbout Gitpod It is a development environment that we can use on a browser. I often use it because I haven\u0026rsquo;t been able to use GitHub Codespaces  yet, and I can use it for free for 100 hours a month with the benefits of GitHub Education  .\n gitpod.io    What I wanted to do # Self-made imageFROMakimon658/go-mecab-neologd:latest# This image doesn\u0026#39;t have gopls, so I want to install itRUN go install golang.org/x/tools/gopls@latestAfter that, I want to run go get etc. as needed.\nWhy I got stuck All accesses under /go/pkg are denied, so I can\u0026rsquo;t run go get.\nCause It occurred because go install was run by root in the Dockerfile. So running sudo will solve it, but the image doesn\u0026rsquo;t have the command. By the way, it won\u0026rsquo;t occur in the official image  because it sets the USER properly.\nSolution FROMakimon658/go-mecab-neologd:latestRUN go install golang.org/x/tools/gopls@latest \u0026amp;\u0026amp; \\  chmod 777 -R / gochmod 777 is a command that allows all users to read, write, and execute to the specified location, and -R is an option that applies it to the contents of the target directory as well. Set this where you need it. It may not need to set 777 permission, but it was troublesome to think.\nAfterword I understood the cause immediately, but I didn\u0026rsquo;t know the mechanism about Linux permissions at all, so it took about an hour to reach the solution.\n","date":"2021-12-20","permalink":"https://akimon658.github.io/en/p/2021/gitpod-permission/","tags":null,"title":"Permission denied when using Gitpod with self-made Dockerfile"},{"content":"PowerShell displays the current full path by default. It\u0026rsquo;s long, so I\u0026rsquo;d like to replace it with ~ like Bash.\nPrepare a profile You can customize your PowerShell with $profile. It doesn\u0026rsquo;t exist by default, so you need to run touch $profile.\nCustomize To customize the prompt, use function prompt. Here is a built-in one.\nfunction prompt { $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $(Get-Location) + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } Source: about Prompts - PowerShell | Microsoft Docs  It seems using $(Get-Location) to get the current path, but we can\u0026rsquo;t use it as a string (even if we use $pwd). So let\u0026rsquo;s use Convert-Path instead.\nfunction prompt { $currentDir = (Convert-Path .) $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $currentDir + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } Now we can use $currentDir as a string. All that is left is checking if it includes $home and replacing it.\nfunction prompt { $currentDir = (Convert-Path .) if ($currentDir.Contains($HOME)) { $currentDir = $currentDir.Replace($HOME, \u0026#34;~\u0026#34;) } $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $currentDir + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } Afterword This time we made just a little customize for PowerShell, but we can do more things with a profile. I\u0026rsquo;m happy if this article will be helpful for you.\nHere is my profile for your reference.\ngithub.com/akimon658/pwsh-profile  ","date":"2021-12-13","permalink":"https://akimon658.github.io/en/p/2021/customize-powershell/","tags":null,"title":"How to replace home directory with \"~\" on PowerShell"}]