[{"content":"PowerShell はデフォルトで現在のフルパスを表示しますが、Bash のようにホームディレクトリを ~ で置き換えてほしかったのでカスタマイズしてみました。\nProfile の準備 Bash でいう .bashrc のように、起動時に読み込まれるファイルに任意の処理を書くことで色々とカスタマイズできます。ただデフォルトでは存在しないので、touch $profile などで作成する必要があります。\nカスタマイズ 見た目に関する処理は prompt 関数に書きます。 デフォルトではこんな感じです。\nfunction prompt { $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $(Get-Location) + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } 参考：プロンプトについて - PowerShell | Microsoft Docs\nカレントディレクトリの取得に $(Get-Location) が使われていますが、これだと文字列として扱うことができません（$pwd も同様）。そこで Convert-Path を使います。\nfunction prompt { $currentDir = (Convert-Path .) $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $currentDir + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } これで文字列として扱えるようになりました。あとは $home が含まれているかチェックして置換するだけです。\nfunction prompt { $currentDir = (Convert-Path .) if ($currentDir.Contains($HOME)) { $currentDir = $currentDir.Replace($HOME, \u0026#34;~\u0026#34;) } $(if (Test-Path variable:/PSDebugContext) { \u0026#39;[DBG]: \u0026#39; } else { \u0026#39;\u0026#39; }) + \u0026#39;PS \u0026#39; + $currentDir + $(if ($NestedPromptLevel -ge 1) { \u0026#39;\u0026gt;\u0026gt;\u0026#39; }) + \u0026#39;\u0026gt; \u0026#39; } あとがき 今回はちょっと表示をいじっただけですが、他にも色々できるので試してみてください。 参考までに僕のリポジトリを置いておきます。\ngithub.com/akimon658/pwsh-profile\n","date":"2021-12-12","permalink":"https://akimon658.github.io/p/2021/customize-powershell/","tags":null,"title":"PowerShell でホームディレクトリを省略する"}]